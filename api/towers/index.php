<?php

// Class that returns nearest towers as JSON

$towers = new TowersAPI();

class TowersAPI {

	var $lat;
	var $lon;
	var $towersArray;

	function __construct()
	{
		$this->lat = $_GET['lat'];
		$this->lon = $_GET['lon'];

		$this->dataSecurity();

		$towersJSON = file_get_contents("../../towers-autogenerated.json");
		$this->towersArray = json_decode($towersJSON, TRUE);

		$this->preFilterTowers();

		print_r ($this->towersArray); // debug

	}

	// Purpose of this to speed things up by not sending all the towers to Haversine calculation
	public function preFilterTowers()
	{
		$thresholdDegrees = 1; // 1 seems to be good value for sparsely towered ares in Finland, resulting in about 10 towers

		foreach ($this->towersArray as $id => $tower)
		{
			if (
				$tower['lat'] > ($this->lat + $thresholdDegrees) ||
				$tower['lat'] < ($this->lat - $thresholdDegrees) ||
				$tower['lon'] > ($this->lon + $thresholdDegrees) ||
				$tower['lon'] < ($this->lon - $thresholdDegrees)
			)
			{
				unset($this->towersArray[$id]);
			}

		}
	}

	public function dataSecurity()
	{
		if (! is_numeric($this->lat) || ! is_numeric($this->lon))
		{
			$data['error'] = "Coordinates given are not numeric";
			$this->sendData($data);
			exit();
		}
	}

	public function sendData($data)
	{
		$json = json_encode($data);
		header('Content-Type: application/json');
		echo $json;
	}


}
